Primero, instalo como sudo el paquete python3.10-venv , para usar un entorno virtual.
Segundo, desde el terminal de python creo un entorno virtual con el comando python -m venv firstdjango
Tercero, activo el entorno virtual con source firstdjango/bin/activate. Desde el terminal, entrando en la carpeta. 
--> Si quiero desactivar, simplemente escribo "deactivate"
Cuarto, Dentro del entorno, instalo django con pip install django
--> confirmación con python -m django --version
Quinto, primer proyecto de jango poniendo django-admin startproject primeraWeb

=================================================================
Sexto, estando dentro del environment ejecuto python manage.py runserver. manage.py está dentro de la carpeta primeraWeb
--> Se puede acceder a la página del proyecto en 127.0.0.1:8000
--> Me da ciertos errores y quiere que haga una migración: python manage.py migrate
--> Si me dice que el puerto está en uso, cerrar y abrir
--> CTRL + C para cerrar el servidor
=========================================================================

Septimo, debo crear una aplicación
--> Se crea con python manage.py startapp [nombre de la app] . Yo le voy a llamar appA 
--> python manage.py startapp appA

==========================================================================

Octavo, incluir en settings (primeraWeb >> primeraWeb) nuestra aplicación.
--> En el apartado INSTALLED_APPS agrego un dato que es el nombre de nuestra aplicación
INSTALLED_APPS = [
    'django.contrib.admin',
    ......
    'django.contrib.staticfiles',
    'appA' 
]

=====================================================================

Noveno, dentro de mi aplicación elijo los modelos (appA >> models.py)
--> entidades o tablas que se asignan a la base de datos.
--> Por ejemplo, dos tablas o modelos: cliente y vendedor
--> No lo escribo todo. Ver contenido. 

Hay que hacer un python manage.py makemigrations  (no sé muy bien por qué; es como consolidar los datos ¿?)
Una vez hecho, hay que hacer python manage.py migrate --> esto permite crear en la bbdd sqlite las tablas que necesita 

================================================================

Decimo, crear una vista
--> en la aplicación, creamos una vista. views.py
--> llamo a las clses de models: from .models import Cliente, Empleados y from django import HttpResponse
---> Debe quedar así

from django.shortcuts import render
from .models import Cliente, Empleados
from django.http import HttpResponse
# Create your views here.

def misClientes(request):
    objeto = Cliente.objects.all().values('nombre')  # Obtiene todos los objetos de la tabla Cliente
    print(objeto)  # Imprime los objetos obtenidos en la consola del servidor
    response_var="<h1>Hola</h1>"  # Variable para almacenar la respuesta HTML
    for cada in objeto:
        response_var += f'<h2>Cliente{cada}</h2><br>'
    return HttpResponse(response_var)  # Devuelve el nombre del cliente

======================================================

Unceavo, de la parte de las URLs

from django.contrib import admin
from django.urls import path
from appA.views import misClientes # --> Importa la vista misClientes desde appA.views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', misClientes, name='misClientes'),  # --> Ruta para la vista misClientes
]

===========================================================

Doceavo, estamos en condiciones de hacer de nuevo;  python manage.py runserver


===========================================================================

Treceavo, añadir datos. Para ello lo mejor es crear una cuenta de usuario administrador con 

python manage.py createsuperuser 

Voy a poner usuario/usuario y gmail coordinador.tde@seritium.es. Bypass sus consejos

ejecutar python manage.py runserver, entrar y añadir /admin a la URL 127.0.0.1:8000

Si quiero administrar las tablas debo añadir los modelos que he creado en admin.py 

from django.contrib import admin
from .models import Cliente, Empleados

# Register your models here.
admin.site.register(Cliente)
admin.site.register(Empleados)


=====================================================================


Seguir viendo el vídeo https://www.youtube.com/watch?v=_WLkr4Rw5-Q a partir del minuto 46:45

Comprobando, probando  